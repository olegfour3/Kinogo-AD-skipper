// ==UserScript==
// @name         Kinogo.inc –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –ü—Ä–æ–ø—É—Å–∫ –†–µ–∫–ª–∞–º—ã
// @namespace    http://tampermonkey.net/
// @version      2.5.0
// @icon            https://github.com/olegfour3/Kinogo-AD-skipper/raw/main/assets/favicon.png
// @updateURL       https://github.com/olegfour3/Kinogo-AD-skipper/raw/main/userscript/kinogo-ad-skipper.user.js
// @downloadURL     https://github.com/olegfour3/Kinogo-AD-skipper/raw/main/userscript/kinogo-ad-skipper.user.js
// @description  –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–æ–ø—É—Å–∫–∞–µ—Ç VAST —Ä–µ–∫–ª–∞–º—É –Ω–∞ kinogo —Å–∞–π—Ç–∞—Ö —Å –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–º –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏–µ–º
// @author       olegfour3
// @match        https://kinogo.inc/
// @match        https://kinogo.ec/
// @match        https://kinogo.media/
// @match        https://kinogo.org/
// @match        https://kinogo.online/
// @match        https://kinogo.*/*
// @match        https://*.kinogo.*/*
// @match        https://*.allarknow.online/*
// @match        https://*.srv224.com/*
// @match        https://*.adstag0102.xyz/*
// @match        https://*.adstag*.*/*
// @match        https://*.cinemar.cc/*
// @match        https://*.atomics.ws/*
// @grant        none
// ==/UserScript==

(function() {
    'use strict';

    console.log('Kinogo Smart Ad Skipper: –°–∫—Ä–∏–ø—Ç –∑–∞–ø—É—â–µ–Ω');

    let config = {
        maxAdDuration: 180, // 3 –º–∏–Ω—É—Ç—ã
        skipOffset: 0.3,    // –ø—Ä–æ–ø—É—Å–∫–∞—Ç—å –∑–∞ 0.3 —Å–µ–∫ –¥–æ –∫–æ–Ω—Ü–∞
        checkInterval: 500, // –ø—Ä–æ–≤–µ—Ä—è—Ç—å –∫–∞–∂–¥—ã–µ 0.5 —Å–µ–∫—É–Ω–¥—ã
        debug: false
    };

    let state = {
        isProcessing: false,
        processedVideos: new Set(),
        lastCheck: 0,
        adCount: 0,
        vastPlayer: null,
        rmpVastInstance: null
    };

    function log(message) {
        if (config.debug) {
            console.log(`[Ad Skipper] ${message}`);
        }
    }

    // –ü–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞–µ–º VAST —Å–æ–±—ã—Ç–∏—è
    function interceptVastEvents() {
        // –ü–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞–µ–º console.log –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è VAST —Å–æ–±—ã—Ç–∏–π
        const originalLog = console.log;
        console.log = function(...args) {
            const message = args.join(' ');
            
            // –û–±–Ω–∞—Ä—É–∂–∏–≤–∞–µ–º –Ω–∞—á–∞–ª–æ —Ä–µ–∫–ª–∞–º—ã
            if (message.includes('RMP-VAST: API EVENT - adstarted')) {
                log('üéØ VAST —Ä–µ–∫–ª–∞–º–∞ –Ω–∞—á–∞–ª–∞—Å—å!');
                setTimeout(() => {
                    const adVideo = findAdVideo();
                    if (adVideo) {
                        skipVastAd(adVideo);
                    }
                }, 100);
            }
            
            // –û–±–Ω–∞—Ä—É–∂–∏–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
            if (message.includes('durationAds ')) {
                const duration = parseFloat(message.split('durationAds ')[1]);
                if (duration && duration < config.maxAdDuration * 1000) {
                    log(`üìä –û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ VAST —Ä–µ–∫–ª–∞–º–∞ –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å—é: ${(duration/1000).toFixed(1)}—Å`);
                }
            }
            
            originalLog.apply(console, args);
        };
    }

    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω
    function hideModalWindows() {
        // –°–µ–ª–µ–∫—Ç–æ—Ä—ã –¥–ª—è –ø–æ–∏—Å–∫–∞ –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω
        const modalSelectors = [
            '#modalOverlay',
            '.modal-overlay',
            'div[id*="modal"][style*="z-index"]',
            // –ù–æ–≤—ã–µ —Ä–µ–∫–ª–∞–º–Ω—ã–µ –±–ª–æ–∫–∏
            'ins.0dd30d14',
            'ins.7236739a',
            '.ad-branding',
            '#skin-aaae741d',
            '#brndbe8cdb1fc'
        ];

        modalSelectors.forEach(selector => {
            const modals = document.querySelectorAll(selector);
            modals.forEach(modal => {
                if (modal && modal.style.display !== 'none') {
                    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ –∏–º–µ–Ω–Ω–æ —Ç–æ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å Telegram-—á–∞—Ç–æ–º –∏–ª–∏ —Ä–µ–∫–ª–∞–º–Ω—ã–π –±–ª–æ–∫
                    const telegramLink = modal.querySelector('a[href*="t.me"]');
                    const feedbackText = modal.querySelector('#feedbackQuestion');
                    const isAdBlock = modal.classList.contains('0dd30d14') || 
                                     modal.classList.contains('7236739a') || 
                                     modal.classList.contains('ad-branding') ||
                                     modal.id === 'skin-aaae741d' ||
                                     modal.id === 'brndbe8cdb1fc';
                    
                    if (telegramLink || feedbackText || modal.innerHTML.includes('Telegram-—á–∞—Ç–µ') || isAdBlock) {
                        const adType = isAdBlock ? '–†–µ–∫–ª–∞–º–Ω—ã–π –±–ª–æ–∫' : '–ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ';
                        log(`üö´ –°–∫—Ä—ã–≤–∞–µ–º ${adType}: ${selector}`);
                        modal.style.display = 'none';
                        modal.style.visibility = 'hidden';
                        modal.style.opacity = '0';
                        modal.style.zIndex = '-9999';
                        
                        // –¢–∞–∫–∂–µ —Å–∫—Ä—ã–≤–∞–µ–º overlay –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å
                        if (modal.classList.contains('modal-overlay') || isAdBlock) {
                            modal.remove();
                        }
                        
                        state.adCount++;
                        showSkipNotification(0, adType);
                    }
                }
            });
        });

        // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ –∏—â–µ–º –ø–æ —Å–æ–¥–µ—Ä–∂–∏–º–æ–º—É
        const allDivs = document.querySelectorAll('div[style*="z-index"]');
        allDivs.forEach(div => {
            if (div.innerHTML.includes('Telegram-—á–∞—Ç–µ') || 
                div.innerHTML.includes('–ü–æ–Ω—Ä–∞–≤–∏–ª—Å—è —Ñ–∏–ª—å–º') ||
                div.innerHTML.includes('–±–æ–ª–µ–µ 500 –∫–∏–Ω–æ–º–∞–Ω–æ–≤')) {
                log('üö´ –°–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –ø–æ —Å–æ–¥–µ—Ä–∂–∏–º–æ–º—É');
                div.style.display = 'none';
                div.style.visibility = 'hidden';
                div.style.opacity = '0';
                
                // –£–±–∏—Ä–∞–µ–º –≤–µ—Å—å —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –µ—Å–ª–∏ —ç—Ç–æ overlay
                const overlay = div.closest('.modal-overlay, [class*="overlay"]');
                if (overlay) {
                    overlay.remove();
                } else {
                    div.remove();
                }
            }
        });
    }

    function findAdVideo() {
        // –ò—â–µ–º VAST —Ä–µ–∫–ª–∞–º–Ω–æ–µ –≤–∏–¥–µ–æ –ø–æ —Ä–∞–∑–ª–∏—á–Ω—ã–º —Å–µ–ª–µ–∫—Ç–æ—Ä–∞–º
        const adSelectors = [
            '.rmp-ad-vast-video-player',
            'video[src*="adstag"]',
            'video[src*="cdn3.adstag"]',
            '.rmp-ad-container video',
            '.allplay__ads video',
            'video.rmp-ad-vast-video-player',
            // –ù–æ–≤—ã–µ —Å–µ–ª–µ–∫—Ç–æ—Ä—ã –¥–ª—è –ø–ª–µ–µ—Ä–æ–≤
            '.js-player-container video',
            '.video-container video',
            '.kg-video-container video',
            'iframe[src*="cinemar.cc"] video',
            'iframe[src*="allarknow.online"] video',
            'iframe[src*="atomics.ws"] video'
        ];

        for (const selector of adSelectors) {
            const video = document.querySelector(selector);
            if (video && video.duration > 0) {
                log(`üé¨ –ù–∞–π–¥–µ–Ω–æ —Ä–µ–∫–ª–∞–º–Ω–æ–µ –≤–∏–¥–µ–æ —á–µ—Ä–µ–∑ —Å–µ–ª–µ–∫—Ç–æ—Ä: ${selector}`);
                return video;
            }
        }

        // –ü–æ–∏—Å–∫ –≤ iframe, –≤–∫–ª—é—á–∞—è –Ω–æ–≤—ã–µ –ø–ª–µ–µ—Ä—ã
        const iframes = document.querySelectorAll('iframe, .js-player-container iframe, .video-container iframe, .kg-video-container iframe');
        for (const iframe of iframes) {
            try {
                // –ü—Ä–æ–≤–µ—Ä—è–µ–º src iframe –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –∏–∑–≤–µ—Å—Ç–Ω—ã—Ö –ø–ª–µ–µ—Ä–æ–≤
                const src = iframe.src || iframe.getAttribute('data-src') || '';
                if (src.includes('cinemar.cc') || src.includes('allarknow.online') || src.includes('atomics.ws')) {
                    log(`üé¨ –ù–∞–π–¥–µ–Ω iframe –ø–ª–µ–µ—Ä–∞: ${src}`);
                }
                
                if (iframe.contentDocument) {
                    for (const selector of adSelectors) {
                        const video = iframe.contentDocument.querySelector(selector);
                        if (video && video.duration > 0) {
                            log(`üé¨ –ù–∞–π–¥–µ–Ω–æ —Ä–µ–∫–ª–∞–º–Ω–æ–µ –≤–∏–¥–µ–æ –≤ iframe: ${selector}`);
                            return video;
                        }
                    }
                }
            } catch (e) {
                // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ –¥–æ—Å—Ç—É–ø–∞ –∫ iframe
            }
        }

        return null;
    }

    function isAdVideo(video) {
        const duration = video.duration;
        const src = video.src || video.currentSrc;
        
        // –û—Å–Ω–æ–≤–Ω–æ–π –∫—Ä–∏—Ç–µ—Ä–∏–π - –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –º–µ–Ω—å—à–µ 3 –º–∏–Ω—É—Ç
        if (duration > 0 && duration < config.maxAdDuration) {
            return true;
        }

        // VAST —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ –ø—Ä–∏–∑–Ω–∞–∫–∏
        const vastIndicators = [
            'adstag', 'vast', 'preroll', 'midroll', 'postroll', 
            'ad-', 'ads-', 'advertisement', 'commercial', 'sponsor',
            'rmp-ad', 'allplay__ads',
            // –ù–æ–≤—ã–µ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã
            's2517.com', 'srv224.com', 'doubleclick.net', 'higneursheriven.com',
            'ume0103d1am2dn7.click', 'brndbe8cdb1fc', 'skin-aaae741d'
        ];

        const videoClasses = video.className.toLowerCase();
        const videoId = video.id.toLowerCase();
        const srcLower = src.toLowerCase();

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ –∫–ª–∞—Å—Å–∞–º, ID –∏ src
        if (vastIndicators.some(indicator => 
            videoClasses.includes(indicator) || 
            videoId.includes(indicator) ||
            srcLower.includes(indicator)
        )) {
            return true;
        }

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –≤–∏–¥–µ–æ
        const container = video.closest('.rmp-ad-container, .allplay__ads, [class*="ad-"], [class*="ads-"], [class*="vast"], .ad-branding, .reklama, .zplata, ins.0dd30d14, ins.7236739a');
        if (container) {
            return true;
        }

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ src URL
        if (src.includes('adstag') || src.includes('ads.') || src.includes('/ads/')) {
            return true;
        }

        return false;
    }

    function skipVastAd(video) {
        const duration = video.duration;
        const skipTime = Math.max(0, duration - config.skipOffset);
        
        log(`‚ö° –ü—Ä–æ–ø—É—Å–∫–∞–µ–º VAST —Ä–µ–∫–ª–∞–º—É –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å—é ${duration.toFixed(1)}—Å`);
        
        try {
            // –ü—Ä–æ–±—É–µ–º —Ä–∞–∑–Ω—ã–µ —Å–ø–æ—Å–æ–±—ã –ø—Ä–æ–ø—É—Å–∫–∞
            video.currentTime = skipTime;
            
            // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ –ø—ã—Ç–∞–µ–º—Å—è –Ω–∞–π—Ç–∏ –∏ –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É –ø—Ä–æ–ø—É—Å–∫–∞
            const skipButtons = [
                '.rmp-ad-container .skip-button',
                '.allplay__skip',
                '[data-allplay="skip"]',
                '.ad-skip-button',
                // –ù–æ–≤—ã–µ –∫–Ω–æ–ø–∫–∏ –ø—Ä–æ–ø—É—Å–∫–∞
                '.js-player-container .skip-button',
                '.video-container .skip-button',
                '.kg-video-container .skip-button',
                '[class*="skip"]',
                '[id*="skip"]'
            ];
            
            for (const selector of skipButtons) {
                const button = document.querySelector(selector);
                if (button && button.offsetParent !== null) {
                    log(`üñ±Ô∏è –ù–∞–π–¥–µ–Ω–∞ –∫–Ω–æ–ø–∫–∞ –ø—Ä–æ–ø—É—Å–∫–∞: ${selector}`);
                    button.click();
                    break;
                }
            }
            
            state.adCount++;
            
            const videoId = getVideoId(video);
            state.processedVideos.add(videoId);
            
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
            showSkipNotification(duration, 'VAST');
            
        } catch (error) {
            log(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–ø—É—Å–∫–µ VAST —Ä–µ–∫–ª–∞–º—ã: ${error.message}`);
        }
    }

    function skipAd(video) {
        const duration = video.duration;
        const skipTime = Math.max(0, duration - config.skipOffset);
        
        log(`‚ö° –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –æ–±—ã—á–Ω—É—é —Ä–µ–∫–ª–∞–º—É –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å—é ${duration.toFixed(1)}—Å`);
        
        video.currentTime = skipTime;
        state.adCount++;
        
        showSkipNotification(duration, '–û–±—ã—á–Ω–∞—è');
        
        const videoId = getVideoId(video);
        state.processedVideos.add(videoId);
    }

    function getVideoId(video) {
        return video.src || video.currentSrc || video.outerHTML.substring(0, 100);
    }

    function checkAndSkipAds() {
        if (state.isProcessing) return;
        
        const now = Date.now();
        if (now - state.lastCheck < config.checkInterval) return;
        
        state.lastCheck = now;
        state.isProcessing = true;

        try {
            // –°–Ω–∞—á–∞–ª–∞ —Å–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω—ã–µ –æ–∫–Ω–∞
            hideModalWindows();
            
            // –ó–∞—Ç–µ–º –∏—â–µ–º VAST —Ä–µ–∫–ª–∞–º—É
            const vastVideo = findAdVideo();
            if (vastVideo && vastVideo.duration > 0 && vastVideo.duration < config.maxAdDuration) {
                const videoId = getVideoId(vastVideo);
                if (!state.processedVideos.has(videoId)) {
                    skipVastAd(vastVideo);
                    return;
                }
            }

            // –ó–∞—Ç–µ–º –æ–±—ã—á–Ω—ã–µ –≤–∏–¥–µ–æ
            const allVideos = findAllVideos();
            
            allVideos.forEach(video => {
                if (!video || video.readyState < 1) return;
                
                const videoId = getVideoId(video);
                if (state.processedVideos.has(videoId)) return;
                
                const duration = video.duration;
                const currentTime = video.currentTime;
                
                if (isNaN(duration) || duration <= 0) return;
                
                log(`üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∏–¥–µ–æ: ${duration.toFixed(1)}—Å, –ø–æ–∑–∏—Ü–∏—è: ${currentTime.toFixed(1)}—Å`);
                
                if (isAdVideo(video)) {
                    skipAd(video);
                } else {
                    // –ü–æ–º–µ—á–∞–µ–º –∫–∞–∫ –æ—Å–Ω–æ–≤–Ω–æ–µ –≤–∏–¥–µ–æ (–Ω–µ —Ä–µ–∫–ª–∞–º–∞)
                    if (duration > config.maxAdDuration) {
                        state.processedVideos.add(videoId);
                        log(`‚úÖ –û—Å–Ω–æ–≤–Ω–æ–µ –≤–∏–¥–µ–æ: ${duration.toFixed(1)}—Å`);
                    }
                }
            });
        } catch (error) {
            log(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ: ${error.message}`);
        } finally {
            state.isProcessing = false;
        }
    }

    function findAllVideos() {
        const videos = [];
        
        // –í–∏–¥–µ–æ –≤ –æ—Å–Ω–æ–≤–Ω–æ–º –¥–æ–∫—É–º–µ–Ω—Ç–µ
        videos.push(...document.querySelectorAll('video'));
        
        // –í–∏–¥–µ–æ –≤ –Ω–æ–≤—ã—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞—Ö –ø–ª–µ–µ—Ä–æ–≤
        const playerContainers = document.querySelectorAll('.js-player-container, .video-container, .kg-video-container, .player-container');
        playerContainers.forEach(container => {
            videos.push(...container.querySelectorAll('video'));
        });
        
        // –í–∏–¥–µ–æ –≤ iframe, –≤–∫–ª—é—á–∞—è –Ω–æ–≤—ã–µ –ø–ª–µ–µ—Ä—ã
        const iframes = document.querySelectorAll('iframe');
        iframes.forEach(iframe => {
            try {
                if (iframe.contentDocument) {
                    videos.push(...iframe.contentDocument.querySelectorAll('video'));
                }
            } catch (e) {
                // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ –¥–æ—Å—Ç—É–ø–∞ –∫ iframe
            }
        });
        
        return videos;
    }

    function showSkipNotification(duration, type = '–†–µ–∫–ª–∞–º–∞') {
        log(`üîî –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ: ${type} (${duration.toFixed(1)}—Å)`);
        try {
            // –ü—Ä–æ–±—É–µ–º –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Ü–µ–ª–µ–≤–æ–π –¥–æ–∫—É–º–µ–Ω—Ç (–æ—Å–Ω–æ–≤–Ω–æ–µ –æ–∫–Ω–æ –∏–ª–∏ —Ç–µ–∫—É—â–µ–µ)
            let targetDoc, targetBody;
            
            try {
                // –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–º—É –æ–∫–Ω—É
                if (window.top && window.top.document && window.top !== window) {
                    targetDoc = window.top.document;
                    targetBody = targetDoc.body;
                } else {
                    throw new Error('–ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–µ–∫—É—â–µ–µ –æ–∫–Ω–æ');
                }
            } catch (e) {
                // –ï—Å–ª–∏ –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–º—É –æ–∫–Ω—É, –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ç–µ–∫—É—â–µ–µ
                targetDoc = document;
                targetBody = document.body;
            }
            
            // –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
            const existingNotifications = targetDoc.querySelectorAll('.ad-skip-notification');
            existingNotifications.forEach(n => n.remove());
            
            const notification = targetDoc.createElement('div');
            notification.className = 'ad-skip-notification';
            notification.innerHTML = `
                <div style="
                    position: fixed;
                    top: 20px;
                    right: 20px;
                    background: linear-gradient(135deg, #28a745, #20c997);
                    color: white;
                    padding: 12px 20px;
                    border-radius: 8px;
                    z-index: 999999;
                    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
                    font-size: 14px;
                    font-weight: 500;
                    box-shadow: 0 4px 20px rgba(0,0,0,0.3);
                    animation: slideIn 0.3s ease-out;
                    border: 1px solid rgba(255,255,255,0.2);
                ">
                    <div style="display: flex; align-items: center; gap: 8px;">
                        <div style="font-size: 18px;">‚ö°</div>
                        <div>
                            <div>${type} –ø—Ä–æ–ø—É—â–µ–Ω–∞</div>
                            <div style="font-size: 12px; opacity: 0.8;">
                                ${Math.round(duration)}—Å ‚Ä¢ –í—Å–µ–≥–æ: ${state.adCount}
                            </div>
                        </div>
                    </div>
                </div>
            `;
            
            // –î–æ–±–∞–≤–ª—è–µ–º CSS –∞–Ω–∏–º–∞—Ü–∏–∏
            if (!targetDoc.querySelector('#ad-skipper-styles')) {
                const styles = targetDoc.createElement('style');
                styles.id = 'ad-skipper-styles';
                styles.textContent = `
                    @keyframes slideIn {
                        from { transform: translateX(100%); opacity: 0; }
                        to { transform: translateX(0); opacity: 1; }
                    }
                    @keyframes slideOut {
                        from { transform: translateX(0); opacity: 1; }
                        to { transform: translateX(100%); opacity: 0; }
                    }
                `;
                targetDoc.head.appendChild(styles);
            }
            
            targetBody.appendChild(notification);
            log(`‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –¥–æ–±–∞–≤–ª–µ–Ω–æ –≤ ${targetDoc === document ? '—Ç–µ–∫—É—â–µ–µ' : '—Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–µ'} –æ–∫–Ω–æ`);

            // –£–±–∏—Ä–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Å –∞–Ω–∏–º–∞—Ü–∏–µ–π
            setTimeout(() => {
                if (notification.parentNode) {
                    notification.style.animation = 'slideOut 0.3s ease-in';
                    setTimeout(() => {
                        if (notification.parentNode) {
                            notification.remove();
                        }
                    }, 300);
                }
            }, 3000);
            
        } catch (error) {
            // –ï—Å–ª–∏ —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫, –ª–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É
            log(`‚ùå –û—à–∏–±–∫–∞ –ø–æ–∫–∞–∑–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: ${error.message}`);
            
            // –ü—Ä–æ—Å—Ç–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ console –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
            console.log(`üéØ Ad Skipper: ${type} –ø—Ä–æ–ø—É—â–µ–Ω–∞ (${Math.round(duration)}—Å) ‚Ä¢ –í—Å–µ–≥–æ: ${state.adCount}`);
        }
    }

    function observeChanges() {
        const observer = new MutationObserver((mutations) => {
            let shouldCheck = false;
            let hasModalChanges = false;
            
            mutations.forEach((mutation) => {
                if (mutation.type === 'childList') {
                    mutation.addedNodes.forEach((node) => {
                        if (node.nodeType === 1) {
                            if (node.tagName === 'VIDEO' || 
                                node.tagName === 'IFRAME' ||
                                (node.querySelector && 
                                 (node.querySelector('video') || node.querySelector('iframe'))) ||
                                (node.className && node.className.includes('rmp-ad'))) {
                                shouldCheck = true;
                            }
                            
                            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –º–æ–¥–∞–ª—å–Ω—ã–µ –æ–∫–Ω–∞ –∏ —Ä–µ–∫–ª–∞–º–Ω—ã–µ –±–ª–æ–∫–∏
                            if (node.className && 
                                (node.className.includes('modal') || 
                                 node.className.includes('overlay') ||
                                 node.className.includes('0dd30d14') ||
                                 node.className.includes('7236739a') ||
                                 node.className.includes('ad-branding') ||
                                 node.className.includes('reklama') ||
                                 node.className.includes('zplata')) ||
                                node.id === 'modalOverlay' ||
                                node.id === 'skin-aaae741d' ||
                                node.id === 'brndbe8cdb1fc' ||
                                (node.innerHTML && 
                                 (node.innerHTML.includes('Telegram-—á–∞—Ç–µ') || 
                                  node.innerHTML.includes('–ü–æ–Ω—Ä–∞–≤–∏–ª—Å—è —Ñ–∏–ª—å–º') ||
                                  node.innerHTML.includes('s2517.com') ||
                                  node.innerHTML.includes('srv224.com')))) {
                                hasModalChanges = true;
                                log('üîÑ –û–±–Ω–∞—Ä—É–∂–µ–Ω–æ –Ω–æ–≤–æ–µ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –∏–ª–∏ —Ä–µ–∫–ª–∞–º–Ω—ã–π –±–ª–æ–∫');
                            }
                        }
                    });
                }
            });

            if (shouldCheck) {
                log('üîÑ –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –Ω–æ–≤—ã–µ –≤–∏–¥–µ–æ —ç–ª–µ–º–µ–Ω—Ç—ã');
                setTimeout(checkAndSkipAds, 200);
            } else if (hasModalChanges) {
                // –ï—Å–ª–∏ –ø–æ—è–≤–∏–ª–∏—Å—å —Ç–æ–ª—å–∫–æ –º–æ–¥–∞–ª—å–Ω—ã–µ –æ–∫–Ω–∞, —Å–∫—Ä—ã–≤–∞–µ–º –∏—Ö –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ
                setTimeout(hideModalWindows, 100);
            }
        });

        observer.observe(document.body, {
            childList: true,
            subtree: true
        });

        return observer;
    }

    function init() {
        log('üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —É–º–Ω–æ–≥–æ –ø—Ä–æ–ø—É—Å–∫–∞ —Ä–µ–∫–ª–∞–º—ã...');
        
        // –ü–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞–µ–º VAST —Å–æ–±—ã—Ç–∏—è
        interceptVastEvents();
        
        // –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª –ø—Ä–æ–≤–µ—Ä–∫–∏ (—á–∞—â–µ –¥–ª—è VAST)
        setInterval(checkAndSkipAds, config.checkInterval);
        
        // –ù–∞–±–ª—é–¥–∞—Ç–µ–ª—å –∑–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è–º–∏ DOM
        observeChanges();
        
        // –ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —É–±—Ä–∞–Ω–∞ –ø–æ –∑–∞–ø—Ä–æ—Å—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        // setTimeout(addControlPanel, 2000);
        
        // –ü–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
        setTimeout(checkAndSkipAds, 500);
        
        // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω —á–µ—Ä–µ–∑ –∫–æ—Ä–æ—Ç–∫–∏–µ –∏–Ω—Ç–µ—Ä–≤–∞–ª—ã
        setTimeout(() => {
            hideModalWindows();
        }, 1000);
        
        log('‚úÖ –£–º–Ω—ã–π –ø—Ä–æ–ø—É—Å–∫ —Ä–µ–∫–ª–∞–º—ã –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω');
        log('üìã –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è: VAST —Ä–µ–∫–ª–∞–º–∞, –æ–±—ã—á–Ω–∞—è —Ä–µ–∫–ª–∞–º–∞, RMP –ø–ª–µ–µ—Ä, –º–æ–¥–∞–ª—å–Ω—ã–µ –æ–∫–Ω–∞');
        log('üÜï –ù–æ–≤–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞: cinemar.cc, allarknow.online, atomics.ws, —Ä–µ–∫–ª–∞–º–Ω—ã–µ –±–ª–æ–∫–∏ ins.0dd30d14/7236739a');
    }

    // –ó–∞–ø—É—Å–∫
    if (document.readyState === 'loading') {
        document.addEventListener('DOMContentLoaded', init);
    } else {
        init();
    }

})(); 